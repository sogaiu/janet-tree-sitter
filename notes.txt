* create README
  * uses git submodules, clone with --recursive
  * prerequisites
    * various windows requirements
      * developer mode enabled if windows 10, otherwise good luck
      * git clone -c core.symlinks=true --recursive <url>
      * grammars need npm and python versions of some sort
    * janet / jpm
    * one or more relevant tree-sitter grammars installed
  * test issues
    * won't work without tree-sitter grammars for:
      * clojure
      * janet-simple
    * some tests don't account for windows file paths
  * credits
    * bakpakin - pieces of janet, path.janet
    * pyrmont - discussion
    * Saikyun - discussion and text-experiment

* valgrind
  * invocation command(s):
  valgrind --tool=memcheck --track-origins=yes --trace-children=yes --dsymutil=yes --leak-check=full --show-leak-kinds=all janet usages/clojure.janet
  valgrind --tool=callgrind janet usages/clojure.janet
  kcachegrind callgrind.out.*
  * understanding the output
  * https://github.com/janet-lang/janet/blob/d3e52a2afb908509f2bfc13e1b4ca07f7d8dd190/Makefile#L186-L216

* janet wrapper of c
 * consider dynamic variable to hold current source, then have a
   node_text function?

* wrap TSPoint?

* implement compare in abstract?

* possibly look at this stackoverflow post later:
  https://stackoverflow.com/questions/49322955/c-copy-struct-with-pointers-from-stack-to-heap/49323149
  it mentions TSNode
